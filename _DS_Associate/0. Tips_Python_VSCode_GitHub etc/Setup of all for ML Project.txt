Setup from YouTuber The Ultimate VS Code Setup for Data Science & AI (2024 Update): 
https://www.youtube.com/watch?v=mpk4Q5feWaw
1. Interactive Jupyter
Interactive Python: Search in Settings for "Jupyter Interactive Window" â†’ Enable (When pressing shift + enter, send selection to Jupyter interactive window as opposed to the Python terminal)


ML Project 
https://www.youtube.com/watch?v=S_F_c9e2bz4&list=PLZoTAELRMXVPS-dOaVbAux22vzqdgoGhG 
///////////////////////////////////////////////////////////////////////////////////
Part 1: Setup and Git

1. create repository in GitHub (noting else to create there) - "stuy_project"
2. create the folder with the same name in computer
3. open command prompt in computer (windows)
	- got to new folder: cd <path>
	- write: "code ." 
	- it will open VSCode with this folder
4. create environment - in VScode:
	- open Terminal
	- in Terminal (in VSCode): 
	a) "conda create -p venv python==3.12 -y"
		(if it does not work, add these paths [
		C:\Users\YourUsername\Anaconda3
		C:\Users\YourUsername\Anaconda3\Scripts
		C:\Users\YourUsername\Anaconda3\Library\bin] 
		to environment paths here:
		[Open the Start Menu, search for "Environment Variables", and select "Edit the system environment variables".
		In the System Properties window, click on the "Environment Variables" button.
		In the Environment Variables window, find the "Path" variable in the "System variables" section and click "Edit".
		Add the following paths to the list]
	b) "conda init"
	c) "conda activate venv/" - I must here go(cd C:\github\study_project) 
		and there C:\github\study_project>conda activate venv/

****<problem with power shell>******BEGIN**************************************
HERE was a problem with power shell and profile file.
I did so:
Create or Edit the PowerShell Profile:
If the profile file does not exist, create it
	> New-Item -Path $PROFILE -Type File -Force
Open the profile file in Notepad
	> notepad $PROFILE
Add Conda Initialization to the Profile: Add the following lines to the profile script
"# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
$env:CONDA_EXE = "C:\ProgramData\anaconda3\Scripts\conda.exe"
$env:_CE_M = ""
$env:_CE_CONDA = ""
$env:CONDA_PYTHON_EXE = "C:\ProgramData\anaconda3\python.exe"
$env:CONDA_SHLVL = "1"
$env:CONDA_PREFIX = "C:\ProgramData\anaconda3"
$env:CONDA_DEFAULT_ENV = "base"
$env:PATH = "C:\ProgramData\anaconda3\Library\bin;C:\ProgramData\anaconda3\Scripts;C:\ProgramData\anaconda3;"+$env:PATH
function conda {
    param([String[]]$args)
    & $env:CONDA_EXE @args
}
function activate {
    param([String]$envName)
    & $env:CONDA_EXE "activate" $envName
}
function deactivate {
    & $env:CONDA_EXE "deactivate"
}
# <<< conda initialize <<<" 


Restart PowerShell: Close and reopen your PowerShell window to apply the changes.
Activate the Environment: Now, try activating your environment again:
	> conda activate venv/ !!!!! Here: cd C:\github\study_project
****************************END***********************************

further i follow these steps from GitHub Guide>
"git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/Andrei618/study_project.git
git push -u origin main"

5. Initialized empty Git repository in C:/github/study_project/.git/
	> git init
6. create README.md file in VSCode in my project
7. add README.md in git: in Terminal in VSCode>
	> git add README.md
7a. chaek the status of git
	> git status
8. ... in git:
	> git branch -M main
9. get access to GitHub:
	> git remote add origin https://github.com/Andrei618/study_project.git 
9a. see git:
	> git remote -v
>> origin  https://github.com/Andrei618/study_project.git (fetch)
>> origin  https://github.com/Andrei618/study_project.git (push)

10. push to GitHub:
	> git push -u origin main
**************specify Git configuration*****************************
if I do it for the first time, I need specify Git configuration:
	> git config --global user.name "John Doe"
	> git config --global user.email johndoe@example.com
****************************END**************************************

11. in GitHub create file .gitignore. Choose standard text from template (type there "Python") then commit changes.

12. update in VSCode:
	> git pull
12a. in the src-folder create file - "__init__.py" (here will build all packages)
13. in VSCode, create setup.py:

15. create new folder - "src"
15a. in VSCode, create requirements.txt (here will be all packages - see function in "setup.py"):

16. install packages:
	> pip install -r requirements.txt
17. add to commit - all new files
	> git add .
17a. see git status:
	> git status
18. do commit:
	> git commit -m "setup"
19. push to GitHub:
	> git push -u origin main
19a. reload GitHub and see changes

///////////////////////////////////////////////////////////////////////////////////
Part 2
20. in folder "src" create folder "components"
20a. in folder "src/components" create the file "__init__.py"
20b. in folder "src/components" create the file "data_ingestion.py"
20c. in folder "src/components" create the file "data_transformation.py"
20d. in folder "src/components" create the file "model_trainer.py"

21. in folder "src" create folder "pipeline" and fill them
21a. in folder "src/pipeline" create the file "__init__.py"
21b. in folder "src/pipeline" create the file "train_pipeline.py"
21c. in folder "src/pipeline" create the file "predict_pipeline.py"

22. 3 important files in folder "scr"  and fill them
22a. in folder "src" create the file "logger.py"
22b. in folder "src" create the file "exception.py"
22c. in folder "src" create the file "utils.py"

23. Check how it works:
23a. in Terminal VSCode:
	> python src/logger.py # file with log will be be created
23b. in Terminal VSCode:
	> python src/exception.py
24. update git:
24a. see how many files changed
	> git status
24b. add 
	> git add .
24c. commit:
	> git commit -m "logging and exception"
24d. push:
	> git push -u origin main

///////////////////////////////////////////////////////////////////////////////////
Part 3: Project

1. 




	